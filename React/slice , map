slice를 통해서 map한 항목 갯수 추리기

import React from "react";
import styled from "styled-components";
import { Grid, Image, Text } from "../elements";
import BeautyStars from "beauty-stars";
import { useDispatch, useSelector } from "react-redux";
import { history } from "../redux/configStore";

const ReviewList = (props) => {
  const {
    _id,
    shopId,
    image,
    menuId,
    userId,
    orderId,
    reviewDate,
    content,
    star,
    _review_list
  } = props;

  console.log(props.star);

  // const content_list = useSelector((state) => state.review.list);
  const storeId = history.location.pathname.split("/")[2];

  const bestContent = _review_list.slice(0, 2);
  console.log(bestContent);

  //리뷰 페이지로 이동
  const gotoReview = () => {
    history.push(`/reviews/${storeId}`);
  };

  return (
    <React.Fragment>
      <ReviewItem onClick={gotoReview}>
        <Grid width="30%" margin="0px">
          <Image back_size="cover" src={props.image} />
        </Grid>
        <Grid width="auto" margin="5% 0px">
          {/* 리뷰 가져오기 */}
          {bestContent.map((c, idx) => {
            return (
              <Text size="15px" key={idx} {...c}>
                {c.content}
              </Text>
            );
          })}

          <Grid margin="7% 0% 0% 0%">
            {/* // 별점 확인 */}
            <BeautyStars value={star} size="20px" /> 
          </Grid>
        </Grid>
      </ReviewItem>
    </React.Fragment>
  );
};

const ReviewItem = styled.div`
  width: 40vmin;
  height: 100px;
  border: 1px solid #cccccc;
  border-radius: 5px;
  display: flex;
  margin-bottom: 5%;
  cursor: pointer;
`;

ReviewList.defaultProps = {
  _id: "60ecfdc2891b59786536a160",
  image:
    "https://i.pinimg.com/originals/18/6a/a3/186aa3d8c6be02a6789f0dda5c2d1806.png",
  shopId: "60ecfdc2891b59786536a160",
  menuId: "60ecfdc2891b59786536a160",
  userId: "60ecfdc2891b59786536a160",
  orderId: "60ecfdc2891b59786536a160",
  reviewDate: "Tue Jul 13 2021 02:43:14 GMT+0000 (Coordinated Universal Time)",
  content: "정말 최고의 맛입니다",
  star: 4,
};

export default ReviewList;



import React from 'react';
import styled from 'styled-components';
import StoreDetailInfo from '../components/StoreDetailInfo';
import ReviewList from '../components/ReviewList';
import Menu from '../components/Menu';

import { Button, Grid, Text } from '../elements';

import {useDispatch, useSelector} from 'react-redux';
import {getMenuDB} from '../redux/modules/store';

import { actionCreators as reviewActions } from '../redux/modules/review';
import {ttlPrice} from '../redux/modules/cart';
import { history } from '../redux/configStore';

//자세히 모달창 패키지
import Modal from 'react-awesome-modal';

const StoreDetail = (props) => {
  const dispatch = useDispatch()
  const storeId = history.location.pathname.split('/')[2]
  const menu_list = useSelector((state) => state.stores.menus);
  const cart_list = useSelector((state) => state.cart.carts);
  const _review_list = useSelector((state) => state.review.list);
  
  console.log(_review_list);

   //로드
  React.useEffect(() => {
    dispatch(getMenuDB(storeId))
    dispatch(reviewActions.getReviewDB(storeId))
  },[])

  //현재 카트에 총 합
  let ttl_price = 0;
  for(let i=0; i<cart_list.length; i++) {
    let price = cart_list[i].countPrice
    ttl_price += price
  }

  //주문하기 버튼
  const orderBtn = () => {
    ttl_price < 15000 ? window.alert('최소 주문 금액은 15,000원 입니다!')
    : history.replace('/cart')
      dispatch(ttlPrice(ttl_price))
  }

  //리뷰 페이지로 이동
  const gotoReview = () => {
    history.push(`/reviews/${storeId}`)
  }

  //모달창
  const [visible, setVisible] = React.useState();
  const showModal = () => {
    setVisible(true)
  }
  const closeModal = () => {
    setVisible(false)
  }


  return (
    <React.Fragment>
      {/* 매장 정보 */}
      {/* //props로 받아오기 자식 페이지에 */}
        <StoreDetailInfo /> 
        <Grid is_flex margin="5% 0%;" width="25vmin;">
          <Grid width="8vmin;" margin="0px">
            <Text margin="10% 0%">배달비</Text>
            <Text>최소주문</Text>
          </Grid>
          <Grid width="15vmin;" margin="0px">
            <Text margin="5% 0%">2,000원
            <Detail onClick={showModal}> 자세히 </Detail>
            {/* 모달창 */}
            <Modal visible={visible} width="400px" height="150px" effect="fadeInDown" onClickAway={closeModal}>
              <Grid>
                <Grid align="center" height="auto" margin="5% auto">
                  <Text>배달비 안내</Text>
                </Grid>
                <Grid is_flex height="auto">
                  <Text>주문금액</Text>
                  <Text>배달비</Text>
                </Grid>
                <hr style={{color:"#e2e2e2", width:"90%"}}/>
                <Grid is_flex height="auto">
                  <Text>5만원 ~</Text>
                  <Text>무료</Text>
                </Grid>
              </Grid>
            </Modal>
            {/* 최소주문 금액 위에서 is_flex 중 */}
            </Text>
            <Text>15,000원</Text>
          </Grid>
        </Grid>
        {/* 리뷰 맵돌리기 */}
        <Grid is_flex>
          <ReviewList _review_list = {_review_list}/>
          {/* 리뷰 더보기 버튼 */}
          <Grid border="1px solid gray" padding="10px" width="10%" height="80px" margin="0px 0px 5% auto" border_radius="5px" >
            <Button _onClick={gotoReview} bg={'white'} margin="0px auto;">
              <Text margin="0px auto;" cursor bold>리뷰 <br/> 더 보기</Text>
            </Button>
          </Grid>
        </Grid>
        <hr/>
        {/* 메뉴 맵돌리기 */}
        {menu_list.map((m, idx) => {
          return <Menu key={m._id} {...m}/>
        })}
        <Grid height="50px;" margin="5% 0% 0% 0%;">
          <Button _onClick={orderBtn}>
            <Grid is_flex>
              <Grid width="10vmin"></Grid>
              <Grid is_flex width="15vmin">
                <Counting>
                  <Text bold color={'#50A0FF'}>{cart_list.length}</Text>
                </Counting>
                <Text size="18px" bold color={'white'}>카트 보기</Text>
              </Grid>
              <TtlPrice>
                <Text size="18px" bold color={'white'}>{ttl_price}원</Text>
              </TtlPrice>
            </Grid>
          </Button>
        </Grid>
    </React.Fragment>
  );
}

const Detail = styled.span`
  width: 5vmin;
  font-size: 1rem;
  color:gray;
`;

const TtlPrice = styled.div`
  width:30vmin;
  align-items: center;
`;

const Counting = styled.div`
  width:4vmin;
  height: 4vmin;
  border-radius: 50%;
  background-color: white;
  color: transparent;
  line-height: 4.3vmin;
`;

export default StoreDetail;
